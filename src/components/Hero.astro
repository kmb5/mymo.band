---
interface Props {}

const {} = Astro.props;
---

<div class="">
    <div
        class="relative isolate overflow-hidden bg-gradient-to-b from-indigo-100/20"
    >
        <div
            class="mx-auto max-w-7xl pt-10 sm:pb-32 lg:grid lg:gap-x-8 lg:px-8 lg:pt-20 lg:pb-0"
        >
            <h1
                class="mt-10 text-4xl font-ibm tracking-tight text-gray-900 sm:text-6xl"
            >
                MYMO
            </h1>
            <span class="-mt-2 ml-1">mine.yours.mine.ours.</span>
        </div>
        <div
            class="mx-auto max-w-7xl pb-24 pt-5 sm:pb-32 lg:grid lg:grid-cols-2 lg:gap-x-8 lg:px-8 lg:py-20 items-center"
        >
            <div class="px-6 lg:px-0 ">
                <iframe
                    style="border-radius:12px"
                    src="https://open.spotify.com/embed/artist/2CbkF34BbgaGtT6GKcUlqW?utm_source=generator"
                    width="100%"
                    height="386"
                    allowfullscreen=""
                    allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture"
                    loading="lazy"></iframe>
            </div>

            <div
                class="mt-20 px-1 sm:mt-24 md:mx-auto md:max-w-2xl lg:mx-0 lg:mt-0 relative"
            >
                <img
                    id="image"
                    class="rounded-xl top-0 left-0 w-full h-auto opacity-0 transition-opacity duration-500 ease-in-out"
                    src="band_1.jpg"
                />
            </div>
        </div>
        <div
            class="absolute inset-x-0 bottom-0 -z-10 h-24 bg-gradient-to-t from-white sm:h-32"
        >
        </div>
    </div>
</div>

<script type="module" client:load>
    const images = [
        "band_1.jpg",
        "band_2.jpg",
        "band_3.jpg",
        // Add more URLs as needed
    ];
    let currentIndex = 0;
    const imageElement = document.getElementById("image");

    // Initially, set the image opacity to 100 to ensure it is visible
    imageElement.classList.remove("opacity-0");

    function changeImage() {
        // Add opacity class 0 to make the current image transparent
        imageElement.classList.add("opacity-0");

        setTimeout(() => {
            currentIndex++;
            if (currentIndex >= images.length) {
                currentIndex = 0;
            }
            imageElement.src = images[currentIndex];
            // Wait for the image to load before making it visible
            imageElement.onload = () => {
                imageElement.classList.remove("opacity-0"); // Make the new image visible
            };
        }, 500); // This time should match the duration of the opacity transition
    }

    // Starts image transition every 4 seconds (includes 1 second for transition duration)
    setInterval(changeImage, 4000);
</script>
